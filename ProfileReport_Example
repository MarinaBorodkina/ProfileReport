#!/usr/bin/env python
# coding: utf-8

# In[1]:


import json
from pathlib import Path

import numpy as np
import pandas as pd

from pandas_profiling import ProfileReport
from pandas_profiling.utils.cache import cache_file

import re
import os, sys

import _util_lib_init


# # Preprocessing

# In[5]:


df = df_raw.copy()

# Prepare missing values
df = df.replace("\\?", np.nan, regex=True)


# # HTML report

# In[6]:


get_ipython().run_cell_magic('time', '', '# Initialize the report\nprofile = ProfileReport(df, title=PARAM_TITLE, explorative=True)\n\n# show column definition\n# definitions = json.load(open(f"OLM_FL_column_definition.json"))\nprofile.set_variable(\n    "dataset",\n    {\n        "description": PARAM_DESCRIPTION,\n        "copyright_year": PARA_COPYRIGHT_YEAR,\n        "creator": PARAM_CREATOR,\n    },\n)\nprofile = ProfileReport(df, title=PARAM_TITLE, explorative=True)\nprofile.to_file(Path(PARAM_PATH))')


# In[ ]:
