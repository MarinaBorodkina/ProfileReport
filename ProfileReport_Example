#!/usr/bin/env python
# coding: utf-8

# In[1]:
import json
from pathlib import Path

import numpy as np
import pandas as pd

from pandas_profiling import ProfileReport
from pandas_profiling.utils.cache import cache_file

import re
import os, sys

import _util_lib_init


# # Preprocessing

# In[5]:
df = df_raw.copy()

# Prepare missing values
df = df.replace("\\?", np.nan, regex=True)


# # HTML report

# In[6]:
%%time
# Initialize the report
profile = ProfileReport(df, title=PARAM_TITLE, explorative=True)

# show column definition
# definitions = json.load(open(f"OLM_FL_column_definition.json"))
profile.set_variable(
    "dataset",
    {
        "description": PARAM_DESCRIPTION,
        "copyright_year": PARA_COPYRIGHT_YEAR,
        "creator": PARAM_CREATOR,
    },
)
profile = ProfileReport(df, title=PARAM_TITLE, explorative=True)
profile.to_file(Path(PARAM_PATH))
# In[ ]:
